require("core.plugin_config.debug.python-dap")
require("core.plugin_config.debug.cpp-dap")
require("core.plugin_config.debug.rust-dap")
require("core.plugin_config.debug.go-dap")

local map = vim.keymap.set
local dap, dapui = require("dap"), require("dapui")
require("nvim-dap-virtual-text").setup()
dapui.setup()
dap.listeners.after.event_initialized["dapui_config"] = function()
	dapui.open()
end
dap.listeners.before.event_terminated["dapui_config"] = function()
	dapui.close()
end
dap.listeners.before.event_exited["dapui_config"] = function()
	dapui.close()
end
local opts = { silent = true, noremap = true }
map("n", "<leader>dq", function()
	require("dap").close()
end, opts)
map("n", "<leader>dr", function()
	require("dapui").toggle({ reset = true })
end, opts)
map("n", "<leader>db", function()
	require("dap").toggle_breakpoint()
end, opts)
map("n", "<leader>dB", function()
	require("dap").set_breakpoint(vim.fn.input("BreakPoing Condition: "))
end, opts)
map("n", "<F1>", function()
	require("dap").continue()
end, opts)
map("n", "<F2>", function()
	require("dap").step_into()
end, opts)
map("n", "<F3>", function()
	require("dap").step_over()
end, opts)
map("n", "<F4>", function()
	require("dap").step_out()
end, opts)
map("n", "<F0>", function()
	require("dap").step_back()
end, opts)
map("n", "<F9>", function()
	require("dap").restart()
end, opts)
map("n", "<leader>dt", function()
	require("dap").terminate()
end, opts)
map("n", "<leader>de", function()
	require("dapui").eval()
end, opts)
